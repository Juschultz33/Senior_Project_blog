[
  {
    "path": "posts/2022-02-16-dice-roles/",
    "title": "Dice roles",
    "description": "Let’s take a look into dice roles in the game of Catan.",
    "author": [
      {
        "name": "Justin Schultz",
        "url": {}
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\r\nRules\r\nWhile we will not be going over all of the rules and how to play the game of Catan you are more than welcome to look into the official rules here.\r\nIntroduction\r\nTo help me understand more about how rolling dice in “Settlers of Catan” affects how the game is played we are going to simulate, how long it would take for a player to build an object based on what resources they have and where they are built.\r\nImportant information\r\nIn the game of Catan there are 4 different objects that a player can build on their turn, and each object takes a different number of resources. These objects are summarized on this building cost cards below.\r\n\r\nEvery role, players may be able to pick up different resources depending if they have a city or settlement on a hex that has a matching dice chip value. This is where the game gets exciting. How do you decided where to build? What resources do you build on? Is building a new settlement going to help you build more objects later? With so many possibilities there are so many different answers.\r\nOur goal is to simulate dice roles and see how long it would take us to build different objects in the game. Because this game is played using random dice roles we are going to simulate how long it takes to build each item 1000 times.\r\nLet’s get started.\r\nBeginning code\r\nWhile the 2 main programming languages that I know are python and R I decided that I will be coding in python. Let’s jump right into the code.\r\nThe first thing we are going to want to do is role 2 dice together. This is easy enough when we use the randint Because each dice role is independent of each other there are a \\(6^2\\) possibilities of outcome or 36. Below is the code and a chart of possible outcomes from 2 dice being rolled.\r\n\r\ndef dice_role():\r\n    d1 = randint(1, 6)\r\n    d2 = randint(1, 6)\r\n    return d1 + d2\r\nGetting Resources\r\nGetting resources is one of the most important parts of playing Catan. To simulate this we are going to create 2 different variables. The first being the cards a player currently has. To do this we created a dictionary with the resource as the name and the count of tards as the value. For this simulation we will set all these cards to 0, however, we could also simulate having cards in our hand if needed.\r\nThe other variable that we are going to create is going to be a dictionary with a list of values. (example{sheep: [4,4,10]}) With this set up we will be able to see the number of resources a player will get when a number is rolled.\r\ncard = {\"sheep\": 0,\r\n        'brick': 0,\r\n        'ore': 0,\r\n        'grain': 0,\r\n        'lumber': 0}\r\n        \r\nr = {\"sheep\": [4, 4, 10],\r\n     'brick': [5],\r\n     'ore': [2, 8],\r\n     'grain': [8],\r\n     'lumber': [6]}\r\n     \r\nGathering resources\r\nNow that we have these basic functions we can now begin to put it together and simulate gathering resources. To do this we need to create a function.\r\nwe are going to create the function get_resources() this function takes in the role, and r (resource) and card and returns card. One of the challenges that I faced while coding this part was getting multiple resources if you rolled. When I started I would just check to see if you had the resources in a list and add one. However, when you count the number of times a role appears in a list then you can add the count to the number of cards.\r\ndef get_resources (role, r, card):\r\n    if role in r['sheep']:\r\n        card['sheep'] += r['sheep'].count(role)\r\n    if role in r['brick']:\r\n        card['brick'] += r['brick'].count(role)\r\n    if role in r['ore']:\r\n        card['ore'] += r['ore'].count(role)\r\n    if role in r['grain']:\r\n        card['grain'] += r['grain'].count(role)\r\n    if role in r['lumber']:\r\n        card['lumber'] += r['lumber'].count(role)\r\n    return card\r\n    \r\nBuilding\r\nWhile gathering resources is fun and all what we really want to do is build things. This is the point of the game after all. To do this we want check to see if we have the resources to build something. Below is a function to check and see if we have enough to build a settlement.\r\ndef settlement_builder(card):\r\n    if card['brick'] >= 1 and card['lumber'] >= 1 \\\r\n    and card['sheep'] >= 1 and card['grain'] >= 1:\r\n        return True\r\n    else:\r\n        return False\r\n\r\nTo do this we see if we have enough resources to build a city and if we can then we will return true. If settlement builder is true we will not test that again until every other object has been built.\r\nBringing it all together we have the following code.\r\nwhile True:\r\n        if road == True and settlement == True \\\r\n        and city == True and devo == True:\r\n            my_list = [ro, s, c, d, rober]\r\n            return my_list\r\n        role = dice_role()\r\n        count += 1\r\n        card = get_resorces(role, r, card)\r\n        if settlement == False:\r\n            settlement = settlement_builder(card)\r\n            if settlement == True:\r\n                s = count\r\n        # Check City\r\n        if city == False:\r\n            city = city_builder(card)\r\n            if city == True:\r\n                c = count\r\n        # Check Devo Cards\r\n        if devo == False:\r\n            devo = devo_card(card)\r\n            if devo == True:\r\n                d = count\r\n        # Check road\r\n        if road == False:\r\n            road = road_builder(card)\r\n            if road == True:\r\n                ro = count\r\n        if role == 7:\r\n            rober += 1\r\nBreaking down this code we roll the dice, get the resources and check to see if we can build any of the objects. When we can build something we save the count of time it took to roll the dice. After we do this 1000 times we then can see how the distribution changes depending on where we are built.\r\n\r\nFuture Me problems\r\nThere are a lot of different problems that I am facing that I did not think would be that difficult to solve. One problem that I was able to fix easily was getting multiple resources on a single role. This is caused by someone have a city of a hex or multiple settlements on a hex. While this was solved using r['lumber'].count(role), We count the number of times the role value shows up in a list and adds that to the rolling sum of the number of cards. Problem solved.\r\nThe next big problem that I am facing is going to be trading in resources. In the game of Catan there are 3 ways get resources besides rolling for them. First any player can trade in 4 of the same resources for 1 of any resource. The next being on a trade port. Trade ports can have either a discounted 3 resources for 1 card or 2 specific resources for 1 card. And the last way to trade resources is between other players. While we probably won’t be able to simulate trading between players trading with ‘the board’ is an essential part of playing Catan because you may not be built on a resource, or you may get unlucky and not get the role you want.\r\nI still have not learned how to fix this problem but Future me will have a solution.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-28T12:12:32-07:00",
    "input_file": "dice-roles.knit.md"
  },
  {
    "path": "posts/2022-02-12-introduction/",
    "title": "Introduction",
    "description": "Go hear to know what its all about!",
    "author": [
      {
        "name": "Justin Schultz",
        "url": {}
      }
    ],
    "date": "2022-02-12",
    "categories": [],
    "contents": "\r\nMy name is Justin Schultz and I have been studying data science at Brigham Young University in Idaho and plan to graduate Fall of 2022. I have successfully taken Math 425, CS 450, and plan to take Math 488 in the near future. Currently I am working on finding an internship but would love to work for a small company and help them grow or work with medical data.\r\nFor my project I would like to analysis probabilities in some of my favorite tabletop game. Over the years I have loved playing games with my wife and family, and I have learned a few useful strategies in some of my favorite games. However, luck has always been a major part of most of these games. This does beg the question of if I am a lucky person or do my strategies work out in my favor. A game that I would like to take a deeper look into would be “Settlers of Catan”.\r\nTo be successful in this project. I would want to learn more about probability of dice roles and how that can affect the game of Catan. In order to understand probability better I would need to learn how to make simulations in R and/or Python and connect the different simulations to different scenarios that the player could find themselves in.\r\nIn the end of my project I want to be able to deliver a web app that would assist players in placing and building settlements and cities. I would like build upon Justin S. Lee’s Website by including things like rolling a 7 and losing cards and also finding a way to record game data for future analysis.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-12T17:06:02-07:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Senior_project",
    "description": "Welcome to our new blog, Senior_project. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Justin Schultz",
        "url": {}
      }
    ],
    "date": "2022-02-12",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-12T17:06:25-07:00",
    "input_file": {}
  }
]
